[{"/Users/lewis/Desktop/NextJS/p5-finalproject/src/index.js":"1","/Users/lewis/Desktop/NextJS/p5-finalproject/src/App.js":"2","/Users/lewis/Desktop/NextJS/p5-finalproject/src/hooks/useStickyState.js":"3","/Users/lewis/Desktop/NextJS/p5-finalproject/src/TextBox.js":"4"},{"size":218,"mtime":1618426236000,"results":"5","hashOfConfig":"6"},{"size":2321,"mtime":1652943577915,"results":"7","hashOfConfig":"6"},{"size":890,"mtime":1652151290137,"results":"8","hashOfConfig":"6"},{"size":336,"mtime":1652027461116,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"pt15p9",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/lewis/Desktop/NextJS/p5-finalproject/src/index.js",[],["20","21"],"/Users/lewis/Desktop/NextJS/p5-finalproject/src/App.js",["22"],"import './App.css';\nimport ScriptTag from 'react-script-tag';\nimport { useStickyState } from \"./hooks/useStickyState\";\nimport TextBox from './TextBox';\nimport data from './descriptions.json';\nimport {useEffect, useCallback} from 'react'\n\n\nexport default function App() {\n  const [state, setState] = useStickyState(1, \"sketchstate\");\n\n  const numStates = 5;\n\n  // Logic to cycle states\n  function changeState(direction) {\n    if (direction === -1){\n      if (state <= 1) {\n        setState(numStates);\n      } else {\n        setState(state - 1);\n      }\n    } else if (direction === 1){\n      if (state >= numStates) {\n        setState(1);\n      } else {\n        setState(state + 1);\n      }\n    }\n    \n  }\n\n  \n  const eventHandler = useCallback((event) => {\n    if(event.key === \"ArrowRight\"){\n      console.log('Used keyboard right arrow to switch scenes')\n      changeState(1);\n    }\n    else if(event.key === \"ArrowLeft\"){\n      console.log('Used keyboard left arrow to switch scenes')\n      changeState(-1);\n    }\n  }, [changeState])\n\n  useEffect( () => {\n    document.addEventListener('keydown', eventHandler);\n\n    return () => {\n      document.removeEventListener('keydown', eventHandler);\n    }\n\n  }, [eventHandler] )\n\n\n  if (state === 1){\n    document.title = \"SCENES\";\n  } else {\n    document.title = \"SCENE \" + (state - 1);\n  }\n  \n  \n\n  return (\n    <div className=\"App\" >\n      \n      <ScriptTag type=\"text/javascript\" src=\"p5/sketch.js\" />\n      \n      <div className=\"gui\">\n\n        {/* Back Button */}\n        <div className=\"btn btnL\" onClick={() => changeState(-1)} >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\" />\n          </svg>\n        </div>\n\n        <TextBox data={data} sceneNum={state}></TextBox>\n\n        {/* Forward Button */}\n        <div className=\"btn btnR\" onClick={() => changeState(1)} >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n          </svg>\n        </div>\n\n        \n\n      </div>\n    </div>\n  );\n}\n","/Users/lewis/Desktop/NextJS/p5-finalproject/src/hooks/useStickyState.js",[],"/Users/lewis/Desktop/NextJS/p5-finalproject/src/TextBox.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":15,"column":3,"nodeType":"29","endLine":30,"endColumn":4},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react-hooks/exhaustive-deps","The 'changeState' function makes the dependencies of useCallback Hook (at line 42) change on every render. To fix this, wrap the definition of 'changeState' in its own useCallback() Hook.","FunctionDeclaration","no-global-assign","no-unsafe-negation"]