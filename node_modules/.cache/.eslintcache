[{"/Users/lewis/Desktop/NextJS/p5-finalproject/src/index.js":"1","/Users/lewis/Desktop/NextJS/p5-finalproject/src/App.js":"2","/Users/lewis/Desktop/NextJS/p5-finalproject/src/hooks/useStickyState.js":"3","/Users/lewis/Desktop/NextJS/p5-finalproject/src/TextBox.js":"4"},{"size":218,"mtime":1618426236000,"results":"5","hashOfConfig":"6"},{"size":2321,"mtime":1652943577915,"results":"7","hashOfConfig":"6"},{"size":890,"mtime":1652151290137,"results":"8","hashOfConfig":"6"},{"size":336,"mtime":1652027461116,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"pt15p9",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/lewis/Desktop/NextJS/p5-finalproject/src/index.js",[],["19","20"],"/Users/lewis/Desktop/NextJS/p5-finalproject/src/App.js",["21"],"/Users/lewis/Desktop/NextJS/p5-finalproject/src/hooks/useStickyState.js",[],"/Users/lewis/Desktop/NextJS/p5-finalproject/src/TextBox.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":15,"column":3,"nodeType":"28","endLine":30,"endColumn":4},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"react-hooks/exhaustive-deps","The 'changeState' function makes the dependencies of useCallback Hook (at line 42) change on every render. To fix this, wrap the definition of 'changeState' in its own useCallback() Hook.","FunctionDeclaration","no-global-assign","no-unsafe-negation"]